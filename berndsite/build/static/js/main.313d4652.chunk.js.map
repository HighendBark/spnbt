{"version":3,"sources":["views/components/AppNavBar.tsx","views/Home.tsx","views/Chat.tsx","views/Portal.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["AppNavBar","props","className","colors","primary","textOnColor","title","style","flex","children","AppNavBarLink","transitionStyle","transition","exact","undefined","activeClassName","to","Home","state","height","width","map","bool","React","Chat","handleOnClick","setState","cs","newValue","clicks","handleMessageSend","websocket","message","JSON","stringify","type","payLoad","console","log","send","handleMessage","ev","target","val","value","ws","WebSocket","window","location","hostname","addEventListener","data","onClick","this","onChange","Portal","secondary","tertiary","textDefault","textHighlight","key","RouteProps","path","render","App","initialLoadingMessage","isLoading","loadingMessage","num","length","interval","setInterval","padEnd","clearInterval","Component","Boolean","match","history","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.313d4652.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { GeneralComponent } from \"../../models/GeneralComponent\";\r\nimport { AppColors } from \"../../models/AppColors\";\r\n\r\nexport const AppNavBar: React.FC<{\r\n  colors: AppColors;\r\n  title: string;\r\n}> = props => {\r\n  return (\r\n    <div\r\n      className={`flex flex-grow-0 w-full h-10 px-2 justify-center items-center bg-${props.colors.primary}-500 shadow z-10`}\r\n    >\r\n      <div className=\"flex justify-center items-center h-full w-full container\">\r\n        <div\r\n          className={`flex flex-1 h-full w-full items-center items-center justify-center text-${props.colors.textOnColor} font-light text-md bg-${props.colors.primary}-900`}\r\n        >\r\n          {props.title}\r\n        </div>\r\n        <div className=\"w-4 h-full\" />\r\n        <div\r\n          className={`flex flex-1 h-full w-full items-center content-start`}\r\n          style={{\r\n            flex: 8\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface AppNavBarLinkProps extends GeneralComponent {\r\n  to: string;\r\n  colors: AppColors;\r\n  exact?: boolean;\r\n}\r\n\r\nexport const AppNavBarLink: React.FC<AppNavBarLinkProps> = props => {\r\n  const transitionStyle: React.CSSProperties = { transition: \"all 200ms\" };\r\n  return (\r\n    <div\r\n      className={`flex h-full justify-center items-center text-${props.colors.primary}-300 ${props.className}`}\r\n      style={transitionStyle}\r\n    >\r\n      <NavLink\r\n        exact={props.exact !== undefined ? props.exact : false}\r\n        activeClassName={`bg-${props.colors.primary}-700 text-${props.colors.textOnColor}`}\r\n        className={`flex justify-center items-center h-full w-full text-sm hover:text-${props.colors.textOnColor} px-6 hover:underline`}\r\n        style={{ ...transitionStyle, ...props.style }}\r\n        to={props.to}\r\n      >\r\n        {props.children}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\nexport interface HomeProps {}\r\n\r\nexport interface HomeState {}\r\n\r\nexport class Home extends React.Component<HomeProps, HomeState> {\r\n  constructor(props: HomeProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"flex w-full h-full justify-center items-center\">\r\n        <div className=\"flex flex-1\">.</div>\r\n        <div\r\n          className=\"flex flex-col bg-blue-700 border content-start shadow-lg overflow-hidden\"\r\n          style={{ height: \"600px\", width: \"400px\" }}\r\n        >\r\n          <div className=\"flex flex-grow-0 h-16 justify-center items-end bg-gray-100 text-xl font-light z-10 text-gray-700 border-b pb-2\">\r\n            <span className=\"flex flex-col flex-1 pl-2 text-base font-light text-gray-600\">\r\n              <span className=\"px-2 hover:underline pointer-cursor text-blue-600\">Ãœbung 4</span>\r\n            </span>\r\n            <span className=\"flex flex-1 items-center justify-center\">Example Name</span>\r\n            <span className=\"flex flex-1 justify-end pr-2 text-base font-light text-gray-600\">\r\n              <span className=\"px-2 hover:underline pointer-cursor text-blue-600\">Deutsch</span>\r\n            </span>\r\n          </div>\r\n          <div className=\"flex flex-col w-full content-start z-10 bg-gray-100\" style={{ flex: 3 }}>\r\n            <div className=\"flex w-full h-5 \">\r\n              {[true, true, true, false, false, false, false, false, false, false].map(bool => (\r\n                <div\r\n                  className={`flex flex-1 bg-white cursor-pointer ${\r\n                    bool\r\n                      ? \"bg-blue-300 border-blue-200 hover:bg-blue-400\"\r\n                      : \"bg-gray-200 border-gray-400 shadow-inner hover:shadow-none hover:bg-gray-300\"\r\n                  }  border-r`}\r\n                  style={{ transition: \"all 150ms\" }}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"flex flex-1 text-normal font-light\">\r\n              <div className=\"p-4 pt-4 w-full h-full border-b border-t bg-gray-200\">\r\n                <div className=\"flex flex-col w-full h-full bg-white shadow-lg rounded-lg\">\r\n                  <div className=\"flex items-center pl-3 pt-1 h-10 border-b text-lg font-light text-blue-600\">\r\n                    Markiere den Hauptsatz\r\n                  </div>\r\n                  <div className=\"p-3 px-4 flex flex-1\">\r\n                    <div className=\"w-full h-full\">\r\n                      <span\r\n                        className=\" hover:bg-blue-200 cursor-pointer\"\r\n                        style={{ transition: \"all 200ms\" }}\r\n                      >\r\n                        Dies ist ein Beispielsatz\r\n                      </span>\r\n                      ,\r\n                      <span\r\n                        className=\" hover:bg-blue-200 cursor-pointer\"\r\n                        style={{ transition: \"all 200ms\" }}\r\n                      >\r\n                        {\" \"}\r\n                        der zum Lernen fÃ¼r SyntaxÃ¼bungen wÃ¤hrend des Germanistikstudiums\r\n                      </span>\r\n                      ,\r\n                      <span\r\n                        className=\" hover:bg-blue-200 cursor-pointer\"\r\n                        style={{ transition: \"all 200ms\" }}\r\n                      >\r\n                        {\" \"}\r\n                        in der UniversitÃ¤t\r\n                      </span>\r\n                      ,\r\n                      <span\r\n                        className=\" hover:bg-blue-200 cursor-pointer\"\r\n                        style={{ transition: \"all 200ms\" }}\r\n                      >\r\n                        {\" \"}\r\n                        genutzt werden kann.\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"px-3 py-1 flex border-t text-xs font-light text-gray-600\">\r\n                    <span className=\"flex flex-1\">Ãœbung 4.4</span>\r\n                    <span className=\"flex flex-1 justify-center\">spÃ¤ter bearbeiten</span>\r\n                    <span className=\"flex flex-1 ml-auto justify-end\">Hilfe</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"flex flex-1 bg-white\">\r\n            <div className=\"flex flex-grow-0 w-full justify-center items-center cursor-pointer text-xl font-light\">\r\n              <div\r\n                className=\"flex justify-center items-center p-6 text-5xl text-red-500 border-2 border-red-500 h-24 w-24 rounded-full hover:bg-red-300\"\r\n                style={{ lineHeight: 0, transition: \"all 150ms\" }}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-grow-0 w-full justify-center items-center text-white  cursor-pointer text-xl font-light\">\r\n              <div\r\n                className=\"flex justify-center items-center p-6 text-5xl text-gray-500 border-2 border-gray-500 h-24 w-24 rounded-full hover:bg-gray-300\"\r\n                style={{ lineHeight: 0, transition: \"all 150ms\" }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex flex-grow-0 w-full justify-center items-center text-white cursor-pointer text-xl font-light\">\r\n              <div\r\n                className=\"flex justify-center items-center p-6 text-5xl text-green-500 border-2 border-green-500 h-24 w-24 rounded-full hover:bg-green-300\"\r\n                style={{ lineHeight: 0, transition: \"all 150ms\" }}\r\n              />\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n        <div className=\"flex flex-1\">.</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { fchmod } from \"fs\";\r\n\r\nexport interface ChatProps {}\r\n\r\nexport interface ChatState {\r\n  clicks: number;\r\n  message: string | null;\r\n  websocket: WebSocket | null;\r\n}\r\n\r\nexport class Chat extends React.Component<ChatProps, ChatState> {\r\n  constructor(props: ChatProps) {\r\n    super(props);\r\n    this.state = {\r\n      clicks: 660,\r\n      message: null,\r\n      websocket: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ws = new WebSocket(`ws://${window.location.hostname}:8080`);\r\n    ws.addEventListener(\"open\", (ev) => {\r\n      console.log(\"test\");\r\n      this.setState((cs) => ({ ...cs, websocket: ws }));\r\n    });\r\n    ws.addEventListener(\"message\", (ev) => {\r\n      console.log(ev.data);\r\n    });\r\n  }\r\n\r\n  handleOnClick = () => {\r\n    this.setState((cs) => {\r\n      const newValue = cs.clicks + 1;\r\n      return {\r\n        clicks: newValue === 666 ? 667 : newValue,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleMessageSend = () => {\r\n    if (this.state.websocket)\r\n      this.setState((cs) => {\r\n        if (cs.websocket) {\r\n          const message = JSON.stringify({ type: \"sendMessage\", payLoad: cs.message + \"\" });\r\n          console.log(message);\r\n          cs.websocket.send(message);\r\n        }\r\n        return { ...cs, message: null };\r\n      });\r\n  };\r\n\r\n  handleMessage = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (ev && ev.target) {\r\n      const val = ev.target.value;\r\n      this.setState({ message: val });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"flex flex-col w-full h-full justify-center items-center\"}>\r\n        <span>Chat</span>\r\n        <span\r\n          className=\"cursor-pointer text-5xl text-gray-700 select-none\"\r\n          onClick={() => this.handleOnClick()}\r\n        >\r\n          {this.state.clicks}\r\n        </span>\r\n        <input type=\"text\" value={this.state.message || \"\"} onChange={this.handleMessage} />\r\n        <button onClick={this.handleMessageSend}>send</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { RouteComponentProps, Switch, Route } from \"react-router\";\r\nimport { AppNavBar, AppNavBarLink } from \"./components/AppNavBar\";\r\nimport { Home } from \"./Home\";\r\nimport { AppColors } from \"../models/AppColors\";\r\nimport { Chat } from \"./Chat\";\r\nimport { Table } from \"./Table\";\r\n\r\nexport interface PortalProps {\r\n  RouteProps: RouteComponentProps;\r\n}\r\n\r\nexport interface PortalState {\r\n  colors: AppColors;\r\n}\r\n\r\nexport class Portal extends React.Component<PortalProps, PortalState> {\r\n  constructor(props: PortalProps) {\r\n    super(props);\r\n    this.state = {\r\n      colors: {\r\n        primary: \"orange\",\r\n        secondary: \"yellow\",\r\n        tertiary: \"teal\",\r\n        textOnColor: \"white\",\r\n        textDefault: \"black\",\r\n        textHighlight: \"purple\",\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`flex flex-col flex-1 w-full h-full`}>\r\n        <AppNavBar title={\"Bernds Page\"} key={\"AppNavBar\"} colors={this.state.colors}>\r\n          <AppNavBarLink exact colors={this.state.colors} to=\"/\">\r\n            Home\r\n          </AppNavBarLink>\r\n          <AppNavBarLink colors={this.state.colors} to=\"/Chat/\">\r\n            Chat\r\n          </AppNavBarLink>\r\n          <AppNavBarLink colors={this.state.colors} to=\"/Table/\">\r\n            Table\r\n          </AppNavBarLink>\r\n        </AppNavBar>\r\n        <div className={`flex flex-1 w-full h-full justify-center items-center bg-gray-100`}>\r\n          <div\r\n            className=\"flex justify-center items-center w-full h-full container\"\r\n            // style={{ maxWidth: this.state.maxWidth }}\r\n          >\r\n            <Switch location={this.props.RouteProps.location}>\r\n              <Route exact path=\"/\" render={(props) => <Home {...this.state} />} />\r\n              <Route path=\"/Chat/\" render={(props) => <Chat {...this.state} />} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./output.css\";\r\nimport { Route } from \"react-router\";\r\nimport { Portal } from \"./views/Portal\";\r\n\r\nexport interface AppProps {}\r\n\r\nexport interface AppState {\r\n  isLoading: boolean;\r\n  loadingMessage: string;\r\n  num: number;\r\n}\r\n\r\nexport class App extends React.Component<AppProps, AppState> {\r\n  initialLoadingMessage: string;\r\n  constructor(props: AppProps) {\r\n    super(props);\r\n    this.initialLoadingMessage = \"Loading\";\r\n    this.state = {\r\n      isLoading: true,\r\n      loadingMessage: this.initialLoadingMessage,\r\n      num: this.initialLoadingMessage.length\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let interval = setInterval(() => {\r\n      console.log(\"test\");\r\n\r\n      this.setState({\r\n        loadingMessage: \"Loading\".padEnd(this.state.num, \".\"),\r\n        num:\r\n          this.state.num === this.initialLoadingMessage.length + 3\r\n            ? this.initialLoadingMessage.length\r\n            : this.state.num + 1\r\n      });\r\n    }, 450);\r\n    this.setState(\r\n      {\r\n        isLoading: false\r\n      },\r\n      () => {\r\n        clearInterval(interval);\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex flex-1 flex-col w-full h-full\">\r\n        {this.state.isLoading ? (\r\n          <div className=\"flex w-full h-full justify-center items-center bg-blue-100 text-3xl\">\r\n            {this.state.loadingMessage}\r\n          </div>\r\n        ) : (\r\n          <Route render={props => <Portal RouteProps={props} />} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Router } from \"react-router\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}